{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Stat/Stat.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Stat/index.js","components/Stat/Stat.js","components/Profile/index.js","components/Profile/Profile.js","components/Statistics/Statistics.js","components/Statistics/index.js","components/FriendList/index.js","components/FriendList/FriendList.js","components/TransactionHistory/index.js","components/TransactionHistory/TransactionHistory.js","components/App/index.js","components/App/App.js","index.js"],"names":["module","exports","Stat","ulClass","lis","list","map","elem","valueClass","style","quantity","value","String","replace","key","id","className","liClass","label","Profile","user","stats","avatar","name","tag","location","toList","followers","shortid","views","likes","classTag","clsx","info","classlocation","profile","description","alt","src","Statistics","title","tmp","percentage","statistics","defaultProps","FriendList","friends","statusClass","status","isOnline","active","item","width","TransactionHistory","items","transactionHeader","transactionBody","index","trClass","type","amount","currency","App","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a706e73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"description\":\"Profile_description__2GJPq\",\"info\":\"Profile_info__2NpoZ\",\"avatar\":\"Profile_avatar__aV4u5\",\"name\":\"Profile_name__2Psdw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"FriendList_friend-list__1_l_8\",\"item\":\"FriendList_item__-lYix\",\"status\":\"FriendList_status__3C5jV\",\"active\":\"FriendList_active__2W6UF\",\"name\":\"FriendList_name__2fvFO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"state\":\"Stat_state__2IKtY\",\"state-list\":\"Stat_state-list__2cVSS Stat_state__2IKtY\",\"label\":\"Stat_label__2Nvic\",\"quantity\":\"Stat_quantity__oL4r0\",\"percentage\":\"Stat_percentage__wZCJj\",\"docx\":\"Stat_docx__2-7wZ\",\"pdf\":\"Stat_pdf__3bMd7\",\"mp3\":\"Stat_mp3__Ya6aZ\",\"psd\":\"Stat_psd__1gWmz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"title\":\"Statistics_title__3PVIg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"TransactionHistory_transaction-history__1LQvk\",\"even\":\"TransactionHistory_even__5yn9P\"};","import Stat from './Stat';\n\nexport default Stat;\n","import React from 'react';\nimport PropType from 'prop-types';\n\nimport style from './Stat.module.css';\n\n/**\n * It's ul element\n *\n * @component\n * @example\n * return (\n *   <Stat ulClass={class} list={list} />;\n * )\n */\nconst Stat = ({ ulClass, list }) => {\n  // Create li elements\n  const lis = list.map(elem => {\n    const valueClass = elem.valueClass\n      ? style[elem.valueClass]\n      : style.quantity;\n\n    // Add , to thousand\n    const value = String(elem.value).replace(\n      /(?<=\\d)(?=(\\d{3})+(?!\\d))/g,\n      '$&,',\n    );\n\n    return (\n      <li key={elem.id} className={style[elem.liClass]}>\n        <span className={style.label}>{elem.label}</span>\n        <span className={valueClass}>{value}</span>\n      </li>\n    );\n  });\n\n  return <ul className={style[ulClass]}>{lis}</ul>;\n};\n\nStat.propTypes = {\n  ulClass: PropType.string.isRequired,\n  list: PropType.arrayOf(\n    PropType.shape({\n      id: PropType.oneOfType([PropType.number, PropType.string]).isRequired,\n      label: PropType.string.isRequired,\n      /**\n       * It's value such as folowers, view ets.\n       */\n      value: PropType.number.isRequired,\n      /**\n       * If need new class for wrap value\n       */\n      valueClass: PropType.string,\n      /**\n       * If need new class for wrap value\n       */\n      liClass: PropType.string,\n    }),\n  ).isRequired,\n};\n\nexport default Stat;\n","import Profile from './Profile';\n\nexport default Profile;\n","import React from 'react';\nimport PropType from 'prop-types';\nimport shortid from 'shortid';\nimport clsx from 'clsx';\n\nimport Stat from '../Stat';\n\nimport style from './Profile.module.css';\n\n/**\n *  Profile component\n *\n *  @component\n *  @example\n *  return (\n *    <Profile user={user} />;\n *  )\n */\nconst Profile = ({ user }) => {\n  const { stats, avatar, name, tag, location } = user;\n\n  const toList = [\n    { label: 'Followers', value: stats.followers, id: shortid() },\n    { label: 'Views', value: stats.views, id: shortid() },\n    { label: 'Likes', value: stats.likes, id: shortid() },\n  ];\n\n  // Class\n  const classTag = clsx(style.tag, style.info);\n  const classlocation = clsx(style.location, style.info);\n\n  return (\n    <div className={style.profile}>\n      <div className={style.description}>\n        <img alt=\"user avatar\" className={style.avatar} src={avatar} />\n        <p className={style.name}>{name}</p>\n        <p className={classTag}>@{tag}</p>\n        <p className={classlocation}>{location}</p>\n\n        <Stat ulClass=\"state\" list={toList} />\n      </div>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  user: PropType.shape({\n    name: PropType.string.isRequired,\n    avatar: PropType.string.isRequired,\n    tag: PropType.string.isRequired,\n    location: PropType.string.isRequired,\n    stats: PropType.shape({\n      followers: PropType.number.isRequired,\n      views: PropType.number.isRequired,\n      likes: PropType.number.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropType from 'prop-types';\n\nimport Stat from '../Stat';\n\nimport style from './Statistics.module.css';\n\n/**\n * Statictic compontent\n *\n * @component\n * @example\n * return (\n *   <Statistics title=\"Upload stat\" stats={stats} />\n * )\n */\nconst Statistics = ({ title, stats }) => {\n  // Data create\n  const list = stats.map(elem => {\n    const tmp = elem;\n    tmp.value = elem.percentage;\n    tmp.liClass = elem.label.replace('.', '');\n    tmp.valueClass = 'percentage';\n    return tmp;\n  });\n\n  return (\n    <section className={style.statistics}>\n      {title && <h2 className={style.title}>{title}</h2>}\n\n      <Stat ulClass=\"state-list\" list={list} />\n    </section>\n  );\n};\n\nStatistics.defaultProps = {\n  title: false,\n};\n\nStatistics.propTypes = {\n  title: PropType.string,\n  stats: PropType.arrayOf(\n    PropType.shape({\n      id: PropType.oneOfType([PropType.number, PropType.string]).isRequired,\n      label: PropType.string.isRequired,\n      /**\n       * It's value in persent\n       */\n      percentage: PropType.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Statistics;\n","import Statistics from './Statistics';\n\nexport default Statistics;\n","import FriendList from './FriendList';\n\nexport default FriendList;\n","import React from 'react';\nimport PropType from 'prop-types';\nimport clsx from 'clsx';\n\nimport style from './FriendList.module.css';\n\n/**\n *  Get friends component\n *\n *  @component\n *  @example\n *  return (\n *    <FriendList friends={friends} />;\n *  )\n */\nconst FriendList = ({ friends }) => {\n  const lis = friends.map(elem => {\n    const statusClass = clsx(style.status, elem.isOnline && style.active);\n\n    return (\n      <li key={elem.id} className={style.item}>\n        <span className={statusClass} />\n        <img className={style.avatar} src={elem.avatar} alt=\"\" width=\"48\" />\n        <p className={style.name}>{elem.name}</p>\n      </li>\n    );\n  });\n\n  return <ul className={style['friend-list']}>{lis}</ul>;\n};\n\nFriendList.propTypes = {\n  friends: PropType.arrayOf(\n    PropType.shape({\n      id: PropType.oneOfType([PropType.number, PropType.string]).isRequired,\n      name: PropType.string.isRequired,\n      avatar: PropType.string.isRequired,\n      isOnline: PropType.bool,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import TransactionHistory from './TransactionHistory';\n\nexport default TransactionHistory;\n","import React from 'react';\nimport PropType from 'prop-types';\n\nimport style from './TransactionHistory.module.css';\n\n/**\n *  Get transaction component\n *\n *  @component\n *  @example\n *  return (\n *    <TransactionHistory items={transactions} />\n *  )\n */\nconst TransactionHistory = ({ items }) => {\n  const transactionHeader = (\n    <tr>\n      <th>Type</th>\n      <th>Amount</th>\n      <th>Currency</th>\n    </tr>\n  );\n\n  // Count items for calculation even\n  const transactionBody = items.map((item, index) => {\n    // Calculation even\n    const trClass = (index % 2 === 1 && 'even') || 'not-even';\n\n    return (\n      <tr className={style[trClass]} key={item.id}>\n        <td>{item.type}</td>\n        <td>{item.amount}</td>\n        <td>{item.currency}</td>\n      </tr>\n    );\n  });\n\n  return (\n    <table className={style['transaction-history']}>\n      <thead>{transactionHeader}</thead>\n\n      <tbody>{transactionBody}</tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropType.arrayOf(\n    PropType.shape({\n      id: PropType.oneOfType([PropType.number, PropType.string]).isRequired,\n      type: PropType.string.isRequired,\n      amount: PropType.any.isRequired,\n      currency: PropType.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\n\nimport './App.css';\n\nimport Profile from '../Profile';\nimport Statistics from '../Statistics';\nimport FriendList from '../FriendList';\nimport TransactionHistory from '../TransactionHistory';\n// Get moke database date\nimport user from '../../db/user.json';\nimport stats from '../../db/statistical-data.json';\nimport friends from '../../db/friends.json';\nimport transactions from '../../db/transactions.json';\n\nconst App = () => {\n  return (\n    <>\n      <Profile user={user} />\n      <Statistics title=\"Upload stat\" stats={stats} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}